# Generated by Django 3.2.2 on 2021-05-13 01:02

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions
import pit.db_constraints


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Mineral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.IntegerField()),
                ('sio2', models.IntegerField()),
                ('fe', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='OtherStorageIncom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=40, unique=True)),
                ('territory', django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unloading_point', django.contrib.gis.db.models.fields.PointField(null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Truck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TruckModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60, unique=True)),
                ('max_weight', models.IntegerField()),
            ],
        ),
        migrations.AddConstraint(
            model_name='truckmodel',
            constraint=models.CheckConstraint(check=models.Q(('max_weight__gt', 0)), name='pit_truckmodel_max_weight_is_positive'),
        ),
        migrations.AddConstraint(
            model_name='truckmodel',
            constraint=models.CheckConstraint(check=models.Q(('title', ''), _negated=True), name='pit_truckmodel_title_is_not_empty'),
        ),
        migrations.AddConstraint(
            model_name='truckmodel',
            constraint=pit.db_constraints.IUniqueConstraint(fields=('title',), name='pit_truckmodel_title_is_unique_ignore_case'),
        ),
        migrations.AddField(
            model_name='truck',
            name='truck_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pit.truckmodel'),
        ),
        migrations.AddField(
            model_name='trip',
            name='mineral',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='pit.mineral'),
        ),
        migrations.AddField(
            model_name='trip',
            name='truck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pit.truck'),
        ),
        migrations.AddConstraint(
            model_name='storage',
            constraint=models.CheckConstraint(check=models.Q(('title', ''), _negated=True), name='pit_storage_title_is_not_empty'),
        ),
        migrations.AddConstraint(
            model_name='storage',
            constraint=pit.db_constraints.IUniqueConstraint(fields=('title',), name='pit_storage_title_is_unique_ignore_case'),
        ),
        migrations.AddField(
            model_name='otherstorageincom',
            name='mineral',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='pit.mineral'),
        ),
        migrations.AddField(
            model_name='otherstorageincom',
            name='storage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pit.storage'),
        ),
        migrations.AddConstraint(
            model_name='mineral',
            constraint=models.CheckConstraint(check=models.Q(('weight__gt', 0)), name='pit_mineral_weight_is_positive'),
        ),
        migrations.AddConstraint(
            model_name='mineral',
            constraint=models.CheckConstraint(check=models.Q(('sio2__gt', 0), ('sio2__lt', 100)), name='pit_mineral_SiO2_is_percent'),
        ),
        migrations.AddConstraint(
            model_name='mineral',
            constraint=models.CheckConstraint(check=models.Q(('fe__gt', 0), ('fe__lt', 100)), name='pit_mineral_Fe_is_percent'),
        ),
        migrations.AddConstraint(
            model_name='mineral',
            constraint=models.CheckConstraint(check=models.Q(('sio2__lt', django.db.models.expressions.CombinedExpression(django.db.models.expressions.Value(100), '-', django.db.models.expressions.F('fe')))), name='pit_mineral_SiO2_Fe_lt100'),
        ),
        migrations.AddConstraint(
            model_name='truck',
            constraint=models.CheckConstraint(check=models.Q(('number', ''), _negated=True), name='pit_truck_number_is_not_empty'),
        ),
        migrations.AddConstraint(
            model_name='truck',
            constraint=pit.db_constraints.IUniqueConstraint(fields=('number',), name='pit_truck_number_is_unique_ignore_case'),
        ),
        migrations.AddConstraint(
            model_name='trip',
            constraint=models.UniqueConstraint(condition=models.Q(('unloading_point__isnull', True)), fields=('truck',), name='pit_trip_only_one_truck_with_active_trip'),
        ),
    ]
